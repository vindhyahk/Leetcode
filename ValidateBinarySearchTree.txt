# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isValidBST(self, root: Optional[TreeNode]) -> bool:
        
        def valid(node, left, right):       #check the bst between 2 intervals -inf and inf and check such that the intervals satisfy the conditions of BST

            if not node:
                return True
            
            if not (node.val > left and node.val < right ) :
                return False
            
            return (valid(node.left, left, node.val ) and
                    valid(node.right, node.val, right))
            
        return valid(root, float("-inf"), float("inf"))